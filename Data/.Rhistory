neutral_150 <-c(28,31,26,20,35)
A_50 <-c(11,18,26,15,14)
A_100 <-c(31,20,22,23,19)
A_150 <-c(23,28,35,27,21)
B_50 <-c(23,30,18,28,23)
B_100 <-c(18,24,9,16,13)
B_150 <-c(28,21,30,30,23)
hesitancy = c(neutral_50, neutral_100, neutral_150, A_50, A_100, A_150, B_50, B_100, B_150)
area <- c(rep("neutral",15), rep("area_A",15),rep("area_B",15))
electrical_stimulation <- c(rep("50",5), rep("100",5), rep("150",5),
rep("50",5), rep("100",5), rep("150",5),
rep("50",5), rep("100",5), rep("150",5),)
data1 <- data.frame(hesitancy, area, electrical_stimulation)
electrical_stimulation <- c(rep("50",5), rep("100",5), rep("150",5),
rep("50",5), rep("100",5), rep("150",5),
rep("50",5), rep("100",5), rep("150",5))
data1 <- data.frame(hesitancy, area, electrical_stimulation)
data1$fac_area = factor(data1$area, levels = c("neutral", "area_A","area_B"),
labels = c("neutral", "area_A","area_B"))
data1$fac_es = factor(data1$electrical_stimulation, levels = c("50", "100","150"),
labels = c("50", "100","150"))
data1_long = data1[, c("hesitancy", "area", "electrical_stimulation")]
View(dataq_long)
View(data1_long)
data1_long = data1[, c("hesitancy", "area", "electrical_stimulation")]
aov.2way_1 = aov(recall ~ fac_age + fac_proc + fac_age*fac_proc, data = esk_dat_long)
summary(aov.2way_1)
# request the mean table
model.tables(aov.2way_1, "means")
aov.2way_1 = aov(hesitancy ~ fac_area + fac_es + fac_area*fac_es, data = data_long1)
data1_long = data1[, c("hesitancy", "area", "electrical_stimulation")]
aov.2way_1 = aov(hesitancy ~ fac_area + fac_es + fac_area*fac_es, data = data_long1)
data1_long = data1[, c("hesitancy", "area", "electrical_stimulation")]
aov.2way_1 = aov(hesitancy ~ fac_area + fac_es + fac_area*fac_es, data = data1_long)
data1$fac_area = factor(data1$area, levels = c("neutral", "area_A","area_B"),
labels = c("neutral", "area_A","area_B"))
data1$fac_es = factor(data1$electrical_stimulation, levels = c("50", "100","150"),
labels = c("50", "100","150"))
data1_long = data1[, c("hesitancy", "area", "electrical_stimulation")]
aov.2way_1 = aov(hesitancy ~ fac_area + fac_es + fac_area*fac_es, data = data1_long)
data1_long = data1[, c("hesitancy", "fac_area", "fac_es")]
aov.2way_1 = aov(hesitancy ~ fac_area + fac_es + fac_area*fac_es, data = data1_long)
summary(aov.2way_1)
# request the mean table
model.tables(aov.2way_1, "means")
#####################################################################
# interaction plot
interaction.plot(esk_dat_long$fac_age, esk_dat_long$fac_proc, esk_dat_long$recall)
# customize the interaction plot
# change the labels and sizes for the X axis, Y-axis, and the trace variable
interaction.plot(esk_dat_long$fac_age, esk_dat_long$fac_proc, esk_dat_long$recall,
xlab = "Age",   # name of the factor x axis (typically the one with more levels)
ylab = "Recall",   # name of the outcome
trace.label = "Processing Level", # name of the other factor (the one with fewer levels)
cex.axis = 1.3,   # size of the axis annotation, 1 by default
cex.lab = 1.2,   # size of the axis titles, 1 by default
lwd = 2.5)  # thickness of the lines, 1 by default
interaction.plot(data1_long$fac_area, data1_long$fac_es, data1_long$hesitancy)
#1
library(datasets)
data(npk)
force(npk)
View(npk)
npk$N <- as.factor(npk$N)
npk$P <- as.factor(npk$P)
interaction.plot(npk$N, npk$P,npk$yield, xlab = "N", ylab = "yield",
trace.label = "P", main = "Interaction Plot")
ANOVA.TwoWay1.MainEffects <- aov(yield ~ N + P, data = npk)
ANOVA.TwoWay1 <- aov(yield ~ N * P, data = npk)
summary(ANOVA.TwoWay1.MainEffects)
Summary_ANOVA.TwoWay1 <- summary(ANOVA.TwoWay1)
Summary_ANOVA.TwoWay1
#5)
library(emmeans)
emmeans.out.N <- emmeans(ANOVA.TwoWay1, 'N')
emmeans.out.N
#6)
emmeans.out.P <- emmeans(ANOVA.TwoWay1, 'P')
emmeans.out.P
N.cont <- contrast(emmeans.out.N, method = 'pairwise')
N.cont
P.cont <- contrast(emmeans.out.P, method = 'pairwise')
P.cont
confint(N.cont)
confint(P.cont)
#8)
out.aov1 <- aov(yield ~ P/N, data = npk)
summary(out.aov1, split = list('N:P' = list('nitrogen given phosphate' = c(1, 3),
'nitrogen given no phospate' = c(2, 4))))
summary(out.aov1, split = list('P:N' = list('nitrogen given phosphate' = c(1, 3),
'nitrogen given no phospate' = c(2, 4))))
summary(out.aov1, split = list('P:N' = list('nitrogen given phosphate' = c(1),
'nitrogen given no phospate' = c(2))))
summary(out.aov1, split = list('P:N' = list('nitrogen given no phosphate' = c(1),
'nitrogen given phospate' = c(2))))
ANOVA.TwoWay1 <- aov(yield ~ P * N, data = npk)
Summary_ANOVA.TwoWay1 <- summary(ANOVA.TwoWay1)
Summary_ANOVA.TwoWay1
#2
data(ToothGrowth)
#2
data(ToothGrowth)
force(ToothGrowth)
View(ToothGrowth)
ToothGrowth_vc <- ToothGrowth[ToothGrowth$supp = 'VC']
ToothGrowth_vc <- ToothGrowth[ToothGrowth$supp == 'VC',]
View(ToothGrowth_vc)
ANOVA.Object2 <- aov(len ~ dose, data=ToothGrowth_vc)
ANOVA_Result2 <- anova(ANOVA.Object2)
ANOVA_Result2
factor_dose <- as.factor(ToothGrowth_vc$dose)
ANOVA.Object2 <- aov(len ~ factor_dose, data=ToothGrowth_vc)
ANOVA_Result2 <- anova(ANOVA.Object2)
ANOVA_Result2
contr.poly(3)
emmeans.out <- emmeans(ANOVA.Object2, 'factor_dose')
contrast.out <- contrast(emmeans.out, method = list('Linear' = contr.poly(3)[,1]))
contrast.out
contrasts(chapter_6_table_1$MinGroup) <- contr.poly(3)
contrasts(factor_dose) <- contr.poly(3)
ANOVA.Object2.Contr <- aov(len ~ factor_dose, data = ToothGrowth_vc)
summary(ANOVA.Object2.Contr, split = list(MinGroup = list(Lin = 1, Quad = 2)))
summary(ANOVA.Object2.Contr, split = list(factor_dose = list(Lin = 1, Quad = 2)))
emmeans.out2 <- emmeans(ANOVA.Object2, 'factor_dose')
contrast.out2 <- contrast(emmeans.out2, method = as.data.frame(contr.poly(3)))
contrast.out2
confint(contrast.out2)
#3
library(MASS)
data(Cars93)
force(Cars93)
View(Cars93)
len(c(12))
length(c(12))
Compact <- (Cars93[Cars93$Type == 'Compact',]$MPG.highway)
Small <- (Cars93[Cars93$Type == 'Small',]$MPG.highway)
Midsize <- (Cars93[Cars93$Type == 'Midsize',]$MPG.highway)
Large <- (Cars93[Cars93$Type == 'Large',]$MPG.highway)
Sporty <- (Cars93[Cars93$Type == 'Sporty',]$MPG.highway)
Van <- (Cars93[Cars93$Type == 'Van',]$MPG.highway)
sizes = c(length(Compact), length(Small), length(Midsize), length(Large), length(Sporty),
length(Van))
sizes
means = c(mean(Compact), mean(Small), mean(Midsize), mean(Large), mean(Sporty),
mean(Van))
means
Stds = c(sd(Compact), sd(Small), sd(Midsize), sd(Large), sd(Sporty),
sd(Van))
Stds
#1)
Cars93$Type <- as.factor(Cars93$Type)
#6)
ANOVA.Object3 <- aov(MPG.highway ~ Type, data=Cars93)
ANOVA_Result3 <- anova(ANOVA.Object3)
ANOVA_Result3
emmeans.out3 <- emmeans(ANOVA.Object3, 'Type')
contrast.out3 <- contrast(emmeans.out3, method = 'tukey')
contrast.out3
#5)
#Normality
shapiro.test(Compact)
shapiro.test(Small)
shapiro.test(Midsize)
shapiro.test(Large)
shapiro.test(Sporty)
shapiro.test(Van)
means[1]
#Independence
r_Compact <- Compact - means[1]*replicate(sizes[1],1)
r_Small <- Small - means[2]*replicate(sizes[2],1)
r_Midsize <- Midsize - means[3]*replicate(sizes[3],1)
r_Large <- Large - means[4]*replicate(sizes[4],1)
r_Sporty <- Sporty - means[5]*replicate(sizes[5],1)
r_Van <- Van - means[6]*replicate(sizes[6],1)
r <- c(r_Compact,r_Small,r_Midsize,r_Large,r_Sporty, r_Van)
Type <-c(replicate(sizes[1],1),replicate(sizes[2],2),replicate(sizes[3],3),
replicate(sizes[4],4),replicate(sizes[5],5),replicate(sizes[6],6))
plot(Type,r,main = 'Independence test by residual plot',
xlab = 'feed', ylab = 'Residuals of Weights')
#HoV
ssqs <- tapply(Cars93$MPG.highway, Cars93$Type, var)
ns <- tapply(Cars93$MPG.highway, Cars93$Type, length)
(max(ns)/min(ns)) * (max(ssqs)/min(ssqs))
#4
#3)
library(car)
aov.out.pre.first <- aov(MPG.highway ~ Weight + Type, data = Cars93)
Anova(aov.out.pre.first, type = 'III')
#4)
emmeans.out4 <- emmeans(aov.out.pre.first, 'Type')
emmeans.out4
contrast(emmeans.out4, method = 'pairwise')
library(lme4)
install.packages("lme4")
library(lme4)
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
library(readxl)
data <- read_excel("Documents/The Catcher in the Corn/research/conference/Cogsci2020/data.xlsx")
View(data)
Imer(key~1+(1|subject)+(1|item),data)
library(ImerTest)
install.packages("ImerTest")
library(ImerTest)
library(Imer)
library(lmerTest)
install.packages("lmerTest")
library(lmerTest)
lmer(key~1+(1|subject)+(1|item),data)
library(lmerTest)
library(lme4)
library(lmerTest)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
data <- read_csv("Documents/The Catcher in the Corn/research/conference/Cogsci2020/data.csv")
View(data)
lmer(key~1+(1|subject)+(1|item),data)
lmer(Key~1+(1|subject)+(1|item),data)
lmer(Key~1+(1|Subject)+(1|Item),data)
lmer(M0~1+(1|Subject)+(1|Item),data)
lmer(M48~1+(1|Subject)+(1|Item),data)
Key_result <- lmer(Key~1+(1|Subject)+(1|Item),data)
View(Key_result)
anova(Key,M0,M48)
M0_result <- lmer(M0~1+(1|Subject)+(1|Item),data)
anova(Key,M0)
anova(Key_result,M0_result)
M48_result <-lmer(M48~1+(1|Subject)+(1|Item),data)
anova(Key_result,M0_result,M48_result)
M49_result <-lmer(M49~1+(1|Subject)+(1|Item),data)
anova(Key_result,M0_result,M48_result,M49_result)
M50_result <-lmer(M50~1+(1|Subject)+(1|Item),data)
anova(Key_result,M0_result,M48_result,M49_result,M50_result)
M41_result <-lmer(M41~1+(1|Subject)+(1|Item),data)
anova(Key_result,M0_result,M48_result,M49_result,M41_result)
anova(M0_result,M48_result,M49_result,M41_result)
anova(M48_result,M49_result)
anova(M49_result,M48_result)
anova(M41_result,M49_result)
anova(Key_result,M48_result)
M51_result <-lmer(M41~1+(1|Subject)+(1|Item),data)
anova(Key_result,M51_result)
M52_result <-lmer(M41~1+(1|Subject)+(1|Item),data)
anova(Key_result,M52_result)
M53_result <-lmer(M41~1+(1|Subject)+(1|Item),data)
anova(Key_result,M53_result)
Summary(M48_result)
summary(M48_result)
anova_result <-anova(Key_result,M48_result,M49_result,M41_result)
summary(anova_result)
anova_result
anova(M49_result,M48_result)
anova(M48_result,M49_result)
result_48 <- lmer(Key~1+M48+(1|Subject)+(1|item),data)
result_48 <- lmer(Key~1+M48+(1|Subject)+(1|Item),data)
result_48
result_49 <- lmer(Key~1+M49+(1|Subject)+(1|Item),data)
anova(M48_result,M49_result)
anova(result_48,result_49)
anova(result_49,result_48)
result_41 <- lmer(Key~1+M41+(1|Subject)+(1|Item),data)
anova(result_41,result_48,result_49)
anova(result_41,result_49)
result_46 <- lmer(Key~1+M46+(1|Subject)+(1|Item),data)
anova(result_46,result_49)
anova(result_46,result_48)
result_40 <- lmer(Key~1+M40+(1|Subject)+(1|Item),data)
anova(result_40,result_48)
result_40 <- lmer(Key~1+M40+(1|Item),data)
result_49 <- lmer(Key~1+M49+(1|Item),data)
anova(result_40,result_49)
result_46 <- lmer(Key~1+M46+(1|Item),data)
anova(result_40,result_46)
anova(result_46,result_49)
result_48 <- lmer(Key~1+M48+(1|Item),data)
anova(result_48,result_49)
install.packages("reshape2")
library(reshape2)
head(data)
data_melt = melt(data, id = c("Subject", "Item", "Key"))
head(data_melt)
View(data_melt)
data_melt$M0vsM1 = ifelse(data_melt$variable =="M0", c(1),
ifelse data_melt$variable == "M1", c(-1), c(NA))
data_melt$M0vsM1 = ifelse(data_melt$variable =="M0", c(1),
ifelse (data_melt$variable == "M1", c(-1), c(NA)))
head(data_melt)
result_M0vsM1 <- lmer(Key~M0vsM1+(1|Subject)+(1|Item),data=data_melt)
result_M0vsM1
aggregate (data_melt, M0vsM1 by = list(variable), fun = mean)
aggregate (data_melt, M0vsM1, by = list(variable), fun = mean)
aggregate (data_melt, data$meltM0vsM1, by = list(variable), fun = mean)
aggregate (data_melt, data_melt$M0vsM1, by = list(variable), fun = mean)
aggregate (data_melt, by = list(variable), fun = mean)
aggregate (data_melt, by = list(variable), FUN = mean)
aggregate (data_melt, by = list(data_melt$variable), FUN = mean)
model = lmer (Key ~ M0vsM1 + (1|Subject)+(1|Item), data = data_melt)
model = lmer (Key ~ M0vsM1 + (1|Subject)+(1|Item), data = subset(data_melt$variable == "M0" or data_melt$variable == "M1")
data_melt$comparison = ifelse(data_melt$variable =="M0", c(1),
ifelse (data_melt$variable == "M1", c(1), c(NA)))
model = lmer (Key ~ M0vsM1 + (1|Subject)+(1|Item),
model = lmer (Key ~ M0vsM1 + (1|Subject)+(1|Item),
data = subset(data_melt$comparison == 1))
model = lmer(Key ~ M0vsM1 + (1|Subject)+(1|Item),
data = subset(data_melt$comparison == 1))
model = lmer(Key ~ M0vsM1 + (1|Subject)+(1|Item),
data = subset(data_melt, data_melt$comparison == 1))
data_melt$M0vsM48 = ifelse(data_melt$variable =="M0", c(1),
ifelse (data_melt$variable == "48", c(-1), c(NA)))
model = lmer(Key ~ M0vsM48 + (1|Subject)+(1|Item), data = data_melt)
head(data_melt)
data_melt$M0vsM48 = ifelse(data_melt$variable =="M0", c(1),
ifelse (data_melt$variable == "M48", c(-1), c(NA)))
model = lmer(Key ~ M0vsM48 + (1|Subject)+(1|Item), data = data_melt)
model
summary(model)
head(data_melt)
model = lmer(Key ~ M0vsM48*value  + (1|Subject)+(1|Item), data = data_melt)
summary(model)
model = lmer(Key ~ M0vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
model = lmer(Key ~ value  + (1+value|Subject)+(1+value|Item), data = subset(data_melt, data_melt$variable =="M0")
model = lmer(Key ~ value  + (1+value|Subject)+(1+value|Item), data = subset(data_melt, data_melt$variable =="M0")
)
model = lmer(Key ~ value  + (1+value|Subject)+(1+value|Item),
data = subset(data_melt, data_melt$variable =="M0"))
summary(model)
model48 = lmer(Key ~ value  + (1+value|Subject)+(1+value|Item),
data = subset(data_melt, data_melt$variable =="M48"))
summary(model48)
anova(model, model48)
model = lmer(Key ~ M0vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
agg=aggregate (data_melt, by = list(data_melt$variable), FUN = mean)
head(agg)
regmodel = lm(Key ~ value*M0vsM1, data = agg)
summary(regmodel)
head(agg)
aggbyitem = (data_melt, by = list(data_melt$variable, data_melt$Subject), FUN = mean)
aggbyitem = (data_melt, by = list(data_melt$variable, data_melt$Subject), FUN = mean)
aggbyitem = (data_melt, by = list(variable, Subject), FUN = mean)
aggbyitem= aggregate (data_melt, by = list(data_melt$variable, data_melt$Subject), FUN = mean)
head(aggbyitem)
aggbyitem= aggregate (data_melt, by = list(data_melt$variable, data_melt$Item), FUN = mean)
head(aggbyitem)
aggbyitem= aggregate (data_melt, by = list(data_melt$Item), FUN = mean)
head(aggbyitem)
summary(moel)
summary(model)
model_nosub = lmer(Key ~ M0vsM48*value  + (1+value|Item), data = data_melt)
model_nosub = lmer(Key ~ M0vsM48*value  + (1+value|Subject), data = data_melt)
data_melt$M0vsM48 = ifelse(data_melt$variable =="M46", c(1),
ifelse (data_melt$variable == "M48", c(-1), c(NA)))
model = lmer(Key ~ M46vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
data_melt$M46vsM48 = ifelse(data_melt$variable =="M46", c(1),
ifelse (data_melt$variable == "M48", c(-1), c(NA)))
model = lmer(Key ~ M46vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
data_melt$M40vsM48 = ifelse(data_melt$variable =="M40", c(1),
ifelse (data_melt$variable == "M40", c(-1), c(NA)))
model = lmer(Key ~ M46vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
data_melt$M40vsM48 = ifelse(data_melt$variable =="M40", c(1),
ifelse (data_melt$variable == "M40", c(-1), c(NA)))
model = lmer(Key ~ M40vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
data_melt$M40vsM48 = ifelse(data_melt$variable =="M40", c(1),
ifelse (data_melt$variable == "M48", c(-1), c(NA)))
model = lmer(Key ~ M40vsM48*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
data_melt$M40vsM49 = ifelse(data_melt$variable =="M40", c(1),
ifelse (data_melt$variable == "M49", c(-1), c(NA)))
model = lmer(Key ~ M40vsM49*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
data_melt$M46vsM49 = ifelse(data_melt$variable =="M46", c(1),
ifelse (data_melt$variable == "M49", c(-1), c(NA)))
model = lmer(Key ~ M46vsM49*value  + (1+value|Subject)+(1+value|Item), data = data_melt)
summary(model)
library(readr)
data_2 <- read_csv("Documents/The Catcher in the Corn/research/conference/Cogsci2020/data_2.csv")
View(data_2)
data_melt2 = melt(data_2, id = c("Subject", "Item", "Key"))
View(data_melt2)
data_melt$M2vsM8 = ifelse(data_melt$variable =="M2", c(1),
ifelse (data_melt$variable == "M8", c(-1), c(NA)))
model2 = lmer(Key ~ M2vsM8*value  + (1+value|Subject)+(1+value|Item), data = data_melt2)
data_melt$M2vsM8 = ifelse(data_melt$variable =="M2", c(1),
ifelse (data_melt$variable == "M8", c(-1), c(NA)))
View(data_melt2)
View(data_melt2)
data_melt2$M2vsM8 = ifelse(data_melt$variable =="M2", c(1),
ifelse (data_melt$variable == "M8", c(-1), c(NA)))
data_melt2$M2vsM8 = ifelse(data_melt2$variable =="M2", c(1),
ifelse (data_melt$variable == "M8", c(-1), c(NA)))
model2 = lmer(Key ~ M2vsM8*value  + (1+value|Subject)+(1+value|Item), data = data_melt2)
summary(model2)
library(readr)
data_3 <- read_csv("Documents/The Catcher in the Corn/research/conference/Cogsci2020/data_3.csv")
View(data_3)
data_melt3 = melt(data_3, id = c("Subject", "Item", "Key"))
data_melt3$M2vsM8 = ifelse(data_melt2$variable =="M2", c(1),
ifelse (data_melt$variable == "M8", c(-1), c(NA)))
data_melt3$M2vsM8 = ifelse(data_melt3$variable =="M2", c(1),
ifelse (data_melt$variable == "M8", c(-1), c(NA)))
model3 = lmer(Key ~ M2vsM8*value  + (1+value|Subject)+(1+value|Item), data = data_melt3)
model3
summary(model3)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
mean_pd <- read_csv("PycharmProjects/Project_Humans/Data/mean_pd.csv")
View(mean_pd)
View(mean_pd)
View(mean_pd)
View(mean_pd)
View(mean_pd)
View(mean_pd)
View(mean_pd)
library(readr)
mean_pd <- read_csv("PycharmProjects/Project_Humans/Data/mean_pd.csv")
View(mean_pd)
Summary_ANOVA.8ways
View(mean_pd)
ANOVA.8ways <-aov(mean ~ period*boundary*window_size*window_weight*window_type*normalization*encode
*representation, data = mean_pd)
View(ANOVA.8ways)
View(mean_pd)
ANOVA.maineffects <-aov(mean ~ period + boundary + window_size + window_weight + window_type
+ normalization + encode + representation, data = mean_pd)
summary(ANOVA.maineffects)
ANOVA.m <-aov(mean ~ period + boundary + window_size + window_weight + window_type
+ normalization + encode + representation + encode * representation
, data = mean_pd)
summary(ANOVA.m)
type_weight <-aov(mean ~ window_type * window_weight
, data = mean_pd)
summary(type_weight)
ANOVA.m <-aov(mean ~ period + boundary + window_size + window_weight + window_type
+ normalization + encode + representation + encode * representation * window_size
, data = mean_pd)
summary(ANOVA.m)
ANOVA.m <-aov(mean ~ period + boundary + window_weight + window_type
+ normalization / encode + representation + window_size
, data = mean_pd)
summary(ANOVA.m)
ANOVA.m <-aov(mean ~ (period + boundary + window_weight + window_type
+ normalization) / (encode + representation + window_size)
, data = mean_pd)
summary(ANOVA.m)
major_size <- mean_pd[mean_pd$period == 'yes', mean_pd$boundary == 'no', mean_pd$window_weight == 'flat',
mean_pd$window_type == 'summed', mean_pd$normalization == 'log']
major_size <- mean_pd[mean_pd$period == 'yes', mean_pd$boundary == 'no', mean_pd$window_weight == 'flat',
mean_pd$window_type == 'summed', mean_pd$normalization == 'log',]
major_size <- mean_pd[mean_pd$period == 'yes', mean_pd$boundary == 'no',]
major_size <- mean_pd[mean_pd$period == 'yes', mean_pd$boundary == 'no',]
major_size <- mean_pd[mean_pd$period == 'yes', ]
major_size <- mean_pd[mean_pd$period == 'yes', boundary == 'no']
major_size <- mean_pd[mean_pd$period == 'yes', mean_pd$boundary == 'no']
major_size <- mean_pd[mean_pd$period == 'yes'][mean_pd$boundary == 'no']
major_size <- mean_pd[mean_pd$period == 'yes',][mean_pd$boundary == 'no',]
major_size <- mean_pd[mean_pd$period == 'yes',mean_pd$boundary == 'no',]
major_size <- mean_pd[mean_pd$period == 'yes' & boundary == 'no',]
major_size <- mean_pd[mean_pd$period == 'yes' & mean_pd$boundary == 'no',]
major_size <- mean_pd[mean_pd$period == 'yes' & mean_pd$boundary == 'no',mean_pd$window_weight == 'flat',
mean_pd$window_type == 'summed', mean_pd$normalization == 'log',]
major_size <- mean_pd[mean_pd$period == 'yes' & mean_pd$boundary == 'no' & mean_pd$window_weight == 'flat'&
mean_pd$window_type == 'summed' & mean_pd$normalization == 'log',]
mean_pd$period <- as.factor(mean_pd$period)
mean_pd$boundary <- as.factor(mean_pd$boundary)
mean_pd$window_size <- as.factor(mean_pd$window_size)
mean_pd$window_weight <- as.factor(mean_pd$window_weight)
mean_pd$window_type <- as.factor(mean_pd$window_type)
mean_pd$normalization <- as.factor(mean_pd$normalization)
mean_pd$encode <- as.factor(mean_pd$encode)
mean_pd$representation <- as.factor(mean_pd$representation)
ANOVA.m <-aov(mean ~ (period + boundary + window_weight + window_type
+ normalization) / (encode + representation + window_size)
, data = mean_pd)
summary(ANOVA.m)
major_size <- mean_pd[mean_pd$period == 'yes' & mean_pd$boundary == 'no' & mean_pd$window_weight == 'flat'&
mean_pd$window_type == 'summed' & mean_pd$normalization == 'log',]
View(major_size)
ANOVA.major_size <-aov(mean ~ encode + representation + window_size + encode * representation * window_size
, data = major_size)
summary(ANOVA.major_size)
major_size$window_size <- as.factor(major_size$window_size)
major_size$encode <- as.factor(major_size$encode)
major_size$representation <- as.factor(major_size$representation)
ANOVA.major_size <-aov(mean ~ encode + representation + window_size + encode * representation * window_size
, data = major_size)
summary(ANOVA.major_size)
View(ANOVA.major_size)
ANOVA.major_size <-aov(mean ~ encode + representation + window_size
, data = major_size)
summary(ANOVA.major_size)
a<-c(1,2)
a[1]
x <- c(1,0,0,0,0,0,0,0)
a <-c(0.2,0.01,0.005,0.006,0.008,0.01,0.001,0.002)
b <-c(0.32,0.56,0.22,0.28,0.15,0.06,0.68,0.36)
cor(x,a)
cor(x,b)
rep <- as.numeric(raw_data$representation == 'space')
setwd("~/PycharmProjects/Project_Humans/Data")
raw_data <- read.csv(file = "raw_2by2.csv")
rep <- as.numeric(raw_data$representation == 'space')
encode <- as.numeric(raw_data$encode == 'sim')
View(raw_data)
